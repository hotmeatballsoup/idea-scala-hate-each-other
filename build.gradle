import com.github.jengelman.gradle.plugins.shadow.transformers.ServiceFileTransformer

buildscript {
	repositories {
		jcenter()
	}
	dependencies {
		classpath 'cz.alenkacz:gradle-scalafmt:1.3.5'
	}
}

plugins {
  id 'scala'
  id 'eclipse'
  id 'application'
  id 'maven-publish'
  id 'com.github.johnrengelman.shadow' version '1.2.3'
}

apply plugin: 'scalafmt'

sourceCompatibility = 1.8
targetCompatibility = 1.8

// FIXME: Bug between IDEA and Gradle 3.0+
// https://discuss.gradle.org/t/idea-integration-with-scala-plugin-broken-since-gradle-3-0-no-such-property-daemonserver/19159/2
ScalaCompileOptions.metaClass.daemonServer = true
ScalaCompileOptions.metaClass.fork = true
ScalaCompileOptions.metaClass.useAnt = false
ScalaCompileOptions.metaClass.useCompileDaemon = false

group = 'hotmeatballsoup'

mainClassName = 'ideascalahateeachother.Driver'

repositories {
  jcenter()
  mavenCentral()
}

dependencies {
  compile(
    'org.scala-lang:scala-library:2.11.11'
    ,'com.typesafe.akka:akka-actor_2.11:2.5.3'
    ,'ch.qos.logback:logback-classic:1.2.3'
    ,'com.softwaremill.macwire:macros_2.11:2.3.0'
	,'org.slf4j:jul-to-slf4j:1.7.25'
	,'nl.grons:metrics-scala_2.11:3.5.9'
  )

  testCompile (
    'junit:junit:4.12'
  )
}

task wrapper(type: Wrapper) {
  gradleVersion = '3.5'
}

task (fizzbuzz) {
  println "Fizzbuzz!"
}

fizzbuzz.shouldRunAfter scalafmt
scalafmt.shouldRunAfter build

manifest {
  attributes 'Main-Class': mainClassName
}

jar {
  manifest {
    attributes 'Main-Class': mainClassName
  }

  baseName = rootProject.name
}

shadowJar {
  baseName = rootProject.name
  classifier = null
  version = null

  transform(ServiceFileTransformer) {
    exclude 'META-INF/*.DSA'
    exclude 'META-INF/*.RSA'
    exclude 'LICENSE*'
  }

  transform(com.github.jengelman.gradle.plugins.shadow.transformers.AppendingTransformer) {
    resource = 'reference.conf'
  }
}

publishing {
  publications {
    shadow(MavenPublication) {
      from components.shadow
      artifactId = rootProject.name
    }
  }
}
